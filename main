#!/usr/bin/env bash
set -e

# configuring script
kbl='#'
read -p '- Username: ' name
read -sp '- Password: ' password; echo
read -p '- Locale (en_US is preinstalled): ' kbl
read -p '- Timezone (e.g. Europe/Moscow): ' zone
read -p '- Target disk name: ' disk
read -p '- Do you want to destroy your own disk? (y/n): ' agreement

case "$agreement" in
    y) true;;
    n) exit 0;;
    *) exit 1;;
esac

# configuring pacman
sed -i -e 's/#ParallelDownloads.*/ParallelDownloads = 12/' -e 's/#Color/Color/' \
       -e 's/#VerbosePkgLists/VerbosePkgLists/' /etc/pacman.conf
echo '- Configuring mirrors...'
systemctl restart reflector
pacman -Syy archlinux-keyring --noconfirm

# disk tuning
sysctl -w vm.vfs_cache_pressure=150
sysctl -w vm.dirty_bytes=268435456
sysctl -w vm.dirty_background_bytes=134217728
sysctl -w vm.dirty_writeback_centisecs=1500

sbd="/sys/block/$disk"
echo 'none' > "$sbd/queue/scheduler"
echo '128' > "$sbd/queue/nr_requests"
echo '2' > "$sbd/queue/rq_affinity"

# disk partitioning
echo '- You have 2 seconds to save your disk!'
sleep 2
cd /
blk="/dev/$disk"
####
set +e
umount -vR /mnt
umount -v $blk*
blkdiscard -vf "$blk"
set -e
####
wipefs -a "$blk"
sgdisk -o -n1::+64M -t1:ef00 -c1:'EFI System Partition' \
          -n2::+ -t2:8304 -c2:'Arch Linux Root' -p "$blk"

mkfs.fat -vF32 -S512 -n 'ESP' --codepage=437 $blk*1
mkfs.btrfs -fKL 'archlinux' -n65536 -m single $blk*2

mount -vt btrfs -o 'noatime,nodiscard,nobarrier,commit=300,lazytime,ssd,compress=zstd:3' $blk*2 /mnt
mount -vt vfat -o 'noexec,nodev,nosuid,noatime,utf8=false,fmask=0177,dmask=0077,X-mount.mkdir=600,lazytime' $blk*1 /mnt/boot

# installing
pacstrap -KP /mnt base linux-zen booster linux-firmware amd-ucode \
                  btrfs-progs f2fs-tools xfsprogs exfatprogs dosfstools gptfdisk \
                  android-tools opendoas git bash-completion {un,}zip gnome-boxes flatpak zram-generator \
                  nano reflector nano-syntax-highlighting gamescope \
                  hyprland polkit xdg-desktop-portal-hyprland mako wofi alacritty noto-fonts waybar brightnessctl \
                  grim slurp vulkan-radeon libva-mesa-driver bluez{,-utils} pipewire{,-alsa,-pulse,-jack}
echo -e "en_US.UTF-8 UTF-8\n${kbl}.UTF-8 UTF-8" >> /mnt/etc/locale.gen

mount -vo bind /tmp/njk /mnt/mnt
arch-chroot /mnt bash /mnt/inchroot "$name" "$password" "$zone"

# tuning the system
cfg='/tmp/njk/cfg'

if [[ -z "$kbl" ]]; then
    cat $cfg/hyprland.conf > /mnt/etc/hyprland.conf
else
    cat $cfg/hyprland.conf | sed "s/kb_layout = us/&,${kbl::2}/" > /mnt/etc/hyprland.conf
fi
cat $cfg/style.css > /mnt/etc/xdg/waybar/style.css
cat $cfg/config.jsonc > /mnt/etc/xdg/waybar/config.jsonc
rm -f /usr/share/applications/{qv4l2,qvidcap,bvnc,bssh,avahi-discover}.desktop

echo 'DefaultTimeoutStopSec=5s' >> /mnt/etc/systemd/system.conf
echo 'SleepOperation=suspend' >> /mnt/etc/systemd/logind.conf
cat /etc/systemd/timesyncd.conf > /mnt/etc/systemd/timesyncd.conf
cp $cfg/zram-generator.conf /mnt/etc/systemd
cat $cfg/loader.conf > /mnt/boot/loader/loader.conf
cp $cfg/arch-zen.conf /mnt/boot/loader/entries/arch-zen.conf
cp $cfg/{20-wired,25-wireless}.network /mnt/etc/systemd/network
mkdir -p /etc/systemd/system/{systemd-networkd-wait-online.service,boot.mount}.d
echo -e '[Service]\nExecStart=\nExecStart=/usr/lib/systemd/systemd-networkd-wait-online --any' \
        > /etc/systemd/system/systemd-networkd-wait-online.service.d/wait-for-only-one-interface.conf
echo -e '[Mount]\nOptions=\nOptions=noexec,nosuid,nodev,nosymfollow,noatime,utf8=false,fmask=0177,dmask=0077,lazytime,rw' \
        > /etc/systemd/system/boot.mount.d/mount-options.conf

echo 'nedocomp' > /mnt/etc/hostname
echo 'permit persist :wheel' > /mnt/etc/doas.conf
chmod 400 /mnt/etc/doas.conf
cp $cfg/60-ioschedulers.rules /mnt/etc/udev/rules.d
cp $cfg/99-sysctl.conf /mnt/etc/sysctl.d
cat /etc/xdg/reflector/reflector.conf > /mnt/etc/xdg/reflector/reflector.conf
cat $cfg/nanorc > /mnt/etc/nanorc

for scr in atp wlc wqc mnt scr fin h pwg pl fls pm dc; do
    cp "/tmp/njk/bin/$scr" "/mnt/usr/bin/$scr"
    chmod 755 "/mnt/usr/bin/$scr"
done

echo '- Goodbye ;)'
sleep 2
umount -vR /mnt
systemctl poweroff
